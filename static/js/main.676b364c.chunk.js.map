{"version":3,"sources":["assets/EatSound.ogg","actions/types.js","helpers/index.js","components/App.js","actions/index.js","reducers/index.js","reducers/gameReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","LOCAL_STORAGE_KEY","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","KEY_ENTER","GRID_SIZE","GAME_SPEED","UP","x","y","DOWN","LEFT","RIGHT","INITIAL_STATE","grid","size","row","cols","col","push","createGrid","apple","Math","floor","random","snake","head","velocity","tail","gameOver","App","eatAudio","Audio","EatSound","componentDidMount","_this","start","playEatAudio","play","props","reset","state","document","addEventListener","e","moveSnake","setTimeout","gameLoop","newHead","updateSnakeHead","moveOnEdge","newTail","concat","Object","toConsumableArray","snakeEatsApple","then","console","log","catch","newApple","getRandomApple","createApple","pop","updateSnakeTail","isGameOver","updateHigh","setGameOver","flag","isOffEdge","emptyCells","forEach","cell","isTail","isHead","length","_this$props","isEating","isApple","find","inTail","getHigh","localStorage","getItem","setItem","event","keyCode","updateSnakeVelocity","newVelocity","renderGrid","_this$props2","react_default","a","createElement","className","style","fontSize","gridTemplateColumns","gridTemplateRows","map","key","width","height","onClick","renderGameOver","this","Component","connect","game","type","payload","combineReducers","arguments","undefined","action","objectSpread","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","react_redux_es","components_App","getElementById"],"mappings":"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","file":"static/js/main.676b364c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/EatSound.1aae80ce.ogg\";","import { createGrid } from '../helpers'\r\n\r\nexport const RESET = 'RESET'\r\nexport const CREATE_APPLE = 'CREATE_APPLE'\r\nexport const UPDATE_HEAD = 'UPDATE_HEAD'\r\nexport const UPDATE_TAIL = 'UPDATE_TAIL'\r\nexport const UPDATE_VELOCITY = 'UPDATE_VELOCITY'\r\nexport const GAME_OVER = 'GAME_OVER'\r\nexport const LOCAL_STORAGE_KEY = 'snake_redux_high'\r\n\r\nexport const KEY_LEFT = 37\r\nexport const KEY_UP = 38\r\nexport const KEY_RIGHT = 39\r\nexport const KEY_DOWN = 40\r\nexport const KEY_ENTER = 13\r\n\r\n// change size to make grid big or small\r\nexport const GRID_SIZE = 20\r\nexport const GAME_SPEED = 80\r\n\r\nexport const UP = {\r\n    x: 0,\r\n    y: -1,\r\n}\r\nexport const DOWN = {\r\n    x: 0,\r\n    y: 1,\r\n}\r\nexport const LEFT = {\r\n    x: -1,\r\n    y: 0,\r\n}\r\nexport const RIGHT = {\r\n    x: 1,\r\n    y: 0,\r\n}\r\n\r\nexport const INITIAL_STATE = {\r\n    grid: createGrid(GRID_SIZE),\r\n    apple: {\r\n        row: Math.floor(Math.random() * GRID_SIZE),\r\n        col: Math.floor(Math.random() * GRID_SIZE),\r\n    },\r\n    snake: {\r\n        head: {\r\n            row: 9,\r\n            col: 9\r\n        },\r\n        velocity: RIGHT,\r\n        tail: [\r\n            {\r\n                row: 9,\r\n                col: 8\r\n            },            \r\n            {\r\n                row: 9,\r\n                col: 7\r\n            }\r\n        ],\r\n    },\r\n    \r\n    gameOver: false\r\n}","export const createGrid = (size) =>{\r\n    const grid = []\r\n\r\n    for (let row = 0; row < size; row++) {\r\n        const cols = [];\r\n        for (let col = 0; col < size; col++) {\r\n            cols.push({\r\n            row,\r\n            col\r\n            });\r\n        }\r\n        grid.push(cols);\r\n    }\r\n    return grid\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  reset,\r\n  setGameOver,\r\n  createApple,\r\n  updateSnakeTail,\r\n  updateSnakeHead,\r\n  updateSnakeVelocity,\r\n} from \"../actions\";\r\nimport {\r\n  GRID_SIZE,\r\n  GAME_SPEED,\r\n  INITIAL_STATE,\r\n  LOCAL_STORAGE_KEY,\r\n  UP,\r\n  DOWN,\r\n  LEFT,\r\n  RIGHT,\r\n  KEY_DOWN,\r\n  KEY_LEFT,\r\n  KEY_RIGHT,\r\n  KEY_UP,\r\n  KEY_ENTER,\r\n} from \"../actions/types\";\r\n\r\nimport \"./style.css\";\r\nimport EatSound from \"../assets/EatSound.ogg\";\r\n\r\nclass App extends Component {\r\n  eatAudio = new Audio(EatSound);\r\n\r\n  componentDidMount = () => {\r\n    this.start();\r\n  };\r\n  playEatAudio = () => {\r\n    return this.eatAudio.play();\r\n  };\r\n  start = () => {\r\n    this.props.reset({\r\n      state: INITIAL_STATE,\r\n    });\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      this.moveSnake(e);\r\n    });\r\n    setTimeout(() => {\r\n      this.gameLoop();\r\n    }, GAME_SPEED);\r\n  };\r\n\r\n  gameLoop = () => {\r\n    //if game is over exit game loop\r\n    if (this.props.gameOver) return;\r\n\r\n    //extracting data from props to change state\r\n    const { snake } = this.props;\r\n\r\n    // updating head\r\n    const newHead = {\r\n      row: snake.head.row + snake.velocity.y,\r\n      col: snake.head.col + snake.velocity.x,\r\n    };\r\n    this.props.updateSnakeHead({\r\n      newHead,\r\n    });\r\n\r\n    //move over condition\r\n    this.moveOnEdge();\r\n\r\n    // updating apple and tail\r\n    let newTail = [snake.head, ...snake.tail];\r\n    const isEat = this.snakeEatsApple();\r\n\r\n    if (isEat) {\r\n      this.playEatAudio()\r\n        .then(() => {\r\n          console.log(\"ate\");\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n      const newApple = this.getRandomApple();\r\n      this.props.createApple({\r\n        newApple,\r\n      });\r\n    } else {\r\n      newTail.pop();\r\n    }\r\n    this.props.updateSnakeTail({\r\n      newTail,\r\n    });\r\n\r\n    //game over condition\r\n    if (this.isGameOver()) {\r\n      this.updateHigh();\r\n      this.props.setGameOver({\r\n        flag: true,\r\n      });\r\n    }\r\n\r\n    //restart loop after defined time\r\n    setTimeout(() => {\r\n      this.gameLoop();\r\n    }, GAME_SPEED);\r\n  };\r\n\r\n  moveOnEdge = () => {\r\n    const { snake } = this.props;\r\n    if (this.isOffEdge(snake.head)) {\r\n      if (snake.head.col > GRID_SIZE - 1) {\r\n        const newHead = {\r\n          row: snake.head.row,\r\n          col: 0,\r\n        };\r\n        this.props.updateSnakeHead({\r\n          newHead,\r\n        });\r\n      } else if (snake.head.col < 0) {\r\n        const newHead = {\r\n          row: snake.head.row,\r\n          col: GRID_SIZE - 1,\r\n        };\r\n        this.props.updateSnakeHead({\r\n          newHead,\r\n        });\r\n      } else if (snake.head.row < 0) {\r\n        const newHead = {\r\n          row: GRID_SIZE - 1,\r\n          col: snake.head.col,\r\n        };\r\n        this.props.updateSnakeHead({\r\n          newHead,\r\n        });\r\n      } else if (snake.head.row > GRID_SIZE - 1) {\r\n        const newHead = {\r\n          row: 0,\r\n          col: snake.head.col,\r\n        };\r\n        this.props.updateSnakeHead({\r\n          newHead,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  getRandomApple = () => {\r\n    const { grid } = this.props;\r\n    const emptyCells = [];\r\n    grid.forEach((row) => {\r\n      row.forEach((cell) => {\r\n        if (!(this.isTail(cell) || this.isHead(cell))) {\r\n          emptyCells.push(cell);\r\n        }\r\n      });\r\n    });\r\n    return emptyCells[Math.floor(Math.random() * emptyCells.length)];\r\n  };\r\n\r\n  snakeEatsApple = () => {\r\n    const { apple, snake } = this.props;\r\n\r\n    return apple.row === snake.head.row && apple.col === snake.head.col;\r\n  };\r\n\r\n  isEating = () => {\r\n    if (this.snakeEatsApple()) {\r\n      console.log(\"here\");\r\n      return \"eating\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  isGameOver = () => {\r\n    if (this.isTail(this.props.snake.head)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  isOffEdge = () => {\r\n    const { snake } = this.props;\r\n    if (\r\n      snake.head.col > GRID_SIZE - 1 ||\r\n      snake.head.col < 0 ||\r\n      snake.head.row > GRID_SIZE - 1 ||\r\n      snake.head.row < 0\r\n    ) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  isHead = (cell) => {\r\n    const { snake } = this.props;\r\n    return snake.head.row === cell.row && snake.head.col === cell.col;\r\n  };\r\n\r\n  isApple = (cell) => {\r\n    const { apple } = this.props;\r\n    return apple.row === cell.row && apple.col === cell.col;\r\n  };\r\n\r\n  isTail = (cell) => {\r\n    const { tail } = this.props.snake;\r\n    return tail.find((inTail) => {\r\n      return inTail.row === cell.row && inTail.col === cell.col;\r\n    });\r\n  };\r\n\r\n  getHigh = () => {\r\n    return localStorage.getItem(LOCAL_STORAGE_KEY);\r\n  };\r\n\r\n  updateHigh = () => {\r\n    const { snake } = this.props;\r\n    if (this.getHigh() === null || this.getHigh() < snake.tail.length - 2) {\r\n      localStorage.setItem(LOCAL_STORAGE_KEY, snake.tail.length - 2);\r\n    }\r\n  };\r\n  moveSnake = (event) => {\r\n    const { snake } = this.props;\r\n    switch (event.keyCode) {\r\n      case KEY_UP:\r\n        if (snake.velocity === UP || snake.velocity === DOWN) return;\r\n        this.props.updateSnakeVelocity({\r\n          newVelocity: UP,\r\n        });\r\n        return;\r\n      case KEY_LEFT:\r\n        if (snake.velocity === LEFT || snake.velocity === RIGHT) return;\r\n        this.props.updateSnakeVelocity({\r\n          newVelocity: LEFT,\r\n        });\r\n        return;\r\n      case KEY_DOWN:\r\n        if (snake.velocity === UP || snake.velocity === DOWN) return;\r\n        this.props.updateSnakeVelocity({\r\n          newVelocity: DOWN,\r\n        });\r\n        return;\r\n      case KEY_RIGHT:\r\n        if (snake.velocity === LEFT || snake.velocity === RIGHT) return;\r\n        this.props.updateSnakeVelocity({\r\n          newVelocity: RIGHT,\r\n        });\r\n        return;\r\n      case KEY_ENTER:\r\n        if (this.props.gameOver) this.start();\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  renderGrid = () => {\r\n    const { grid, snake } = this.props;\r\n\r\n    return (\r\n      <div className=\"center\">\r\n        <div className=\"snake-emoji\">🐍</div>\r\n        <div>\r\n          <h3 className=\"score\">\r\n            Current Score: {snake.tail.length - 2}{\" \"}\r\n            <span style={{ fontSize: \"18px\" }}> | </span> Highest Score:{\" \"}\r\n            {this.getHigh() || 0}\r\n          </h3>\r\n          <section\r\n            className=\"grid\"\r\n            style={{\r\n              gridTemplateColumns: `repeat(${GRID_SIZE}, 1fr)`,\r\n              gridTemplateRows: `repeat(${GRID_SIZE}, 1fr)`,\r\n            }}\r\n          >\r\n            {grid.map((row) =>\r\n              row.map((cell) => (\r\n                <div\r\n                  key={`${cell.row} ${cell.col}`}\r\n                  style={{\r\n                    width: `${800 / GRID_SIZE}`,\r\n                    height: `${800 / GRID_SIZE}`,\r\n                  }}\r\n                  className={`cell ${\r\n                    this.isHead(cell)\r\n                      ? \"head\"\r\n                      : this.snakeEatsApple(cell)\r\n                      ? \"eating\"\r\n                      : this.isApple(cell)\r\n                      ? \"apple\"\r\n                      : this.isTail(cell)\r\n                      ? \"tail\"\r\n                      : \"\"\r\n                  }`}\r\n                ></div>\r\n              ))\r\n            )}\r\n          </section>\r\n        </div>\r\n        <div className=\"control-grid\">\r\n          <div\r\n            className=\"control-up\"\r\n            onClick={() => this.moveSnake({ keyCode: 38 })}\r\n          >\r\n            &uarr;\r\n          </div>\r\n          <div\r\n            className=\"control-left\"\r\n            onClick={() => this.moveSnake({ keyCode: 37 })}\r\n          >\r\n            &larr;\r\n          </div>\r\n          <div\r\n            className=\"control-right\"\r\n            onClick={() => this.moveSnake({ keyCode: 39 })}\r\n          >\r\n            &rarr;\r\n          </div>\r\n          <div\r\n            className=\"control-down\"\r\n            onClick={() => this.moveSnake({ keyCode: 40 })}\r\n          >\r\n            &darr;\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderGameOver = () => {\r\n    return (\r\n      <div className=\"card text-center\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">You bit yourself!!</h5>\r\n          <p className=\"card-text\">\r\n            Your Score is: {this.props.snake.tail.length - 2}\r\n          </p>\r\n          <button className=\"btn btn-primary\" onClick={this.start}>\r\n            Restart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.props.gameOver ? this.renderGameOver() : this.renderGrid()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    grid: state.game.grid,\r\n    apple: state.game.apple,\r\n    snake: state.game.snake,\r\n    gameOver: state.game.gameOver,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  reset,\r\n  createApple,\r\n  setGameOver,\r\n  updateSnakeTail,\r\n  updateSnakeHead,\r\n  updateSnakeVelocity,\r\n})(App);\r\n","\r\nimport {\r\n    UPDATE_HEAD,\r\n    UPDATE_TAIL,\r\n    UPDATE_VELOCITY,\r\n    CREATE_APPLE,\r\n    RESET,\r\n    GAME_OVER\r\n} from './types'\r\n\r\nexport const reset = (state) => {\r\n    return({\r\n        type: RESET,\r\n        payload: state\r\n    })\r\n}\r\n\r\nexport const setGameOver = (flag) => {\r\n    return({\r\n        type: GAME_OVER,\r\n        payload: flag\r\n\r\n    })\r\n}\r\n\r\nexport const createApple = (apple) =>{\r\n    return({\r\n        type: CREATE_APPLE,\r\n        payload: apple\r\n    })\r\n}\r\nexport const updateSnakeHead = (head) =>{\r\n    return({\r\n        type: UPDATE_HEAD,\r\n        payload: head\r\n    })\r\n}\r\nexport const updateSnakeTail = (tail) =>{\r\n    return({\r\n        type: UPDATE_TAIL,\r\n        payload: tail\r\n    })\r\n}\r\nexport const updateSnakeVelocity = (velocity) =>{\r\n    return({\r\n        type: UPDATE_VELOCITY,\r\n        payload: velocity\r\n    })\r\n}\r\n\r\n","import { combineReducers } from 'redux';\r\n\r\nimport gameReducer from './gameReducer';\r\n\r\nexport default combineReducers({\r\n    game: gameReducer\r\n})\r\n","import {\r\n    RESET,\r\n    GAME_OVER,\r\n    UPDATE_TAIL,\r\n    UPDATE_HEAD,\r\n    CREATE_APPLE,\r\n    INITIAL_STATE,\r\n    UPDATE_VELOCITY\r\n} from '../actions/types'\r\n\r\nexport default (state = INITIAL_STATE, action) =>{\r\n    switch(action.type){\r\n        case RESET:\r\n            return {...action.payload.state}\r\n        case GAME_OVER:\r\n            return {...state, gameOver: action.payload.flag}\r\n        case CREATE_APPLE:\r\n            return {...state, apple: action.payload.newApple}\r\n        case UPDATE_HEAD:\r\n            return {...state, snake: {...state.snake, head: action.payload.newHead}}\r\n        case UPDATE_TAIL:\r\n            return {...state, snake: {...state.snake, tail: action.payload.newTail}}\r\n        case UPDATE_VELOCITY:\r\n            return {...state, snake: {...state.snake, velocity: action.payload.newVelocity}}\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport reduxThunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware , compose } from 'redux';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App/>\r\n</Provider>, document.getElementById('root'));"],"sourceRoot":""}